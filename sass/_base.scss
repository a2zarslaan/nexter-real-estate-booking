// COLOR VARIABLES
$color-primary: #c69963;
$color-primary-dark: #B28451;

$color-secondary: #101d2c;

$color-grey-light-1: #f9f7f6;
$color-grey-light-2: #aaa;

$color-grey-dark-1: #54483A;
$color-grey-dark-2: #6D5D4B;

// FONT VARIABLES
$font-primary: 'Nunito', sans-serif; 
$font-display: 'Josefin Sans', sans-serif;



//global reset
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 62.5%;  //1rem = 10px, 10px/16px = 62.5%
}

body {
  font-family: $font-primary;
  color: $color-grey-dark-2;
  font-weight: 300; //can use 300 as it is included when the font is imported above
  line-height: 1.6;
}


//building grids
.container {
  display: grid;

  //min-content means the grid item will be at least as wide as the content's width, if the screen is smaller, the item will shift to the new row. So in the following line of code we're assigning properties of individual rows in the layout 
  grid-template-rows: 80vh min-content 40vw repeat(3, min-content); //3 consecutive rows will have min-content hence repeat

  //we want the width of these columns to be at least as wide as the min content, and maximum 14rem wide. This will ensure respinsive behavior as screen size is reduced. Sidebar is 8rem fixed because it always stays at the same spot. We're using fractional units to the left and right of the 8 columns in the middle to ensure that they are in the middle of the screen. Further, minmax(6rem, 1fr) is used to provide a minimum width of 60 pixels to the column. This is because these fractional units here are working as a margin between the content and the end of the page, so even when as screen size is reduced they do not disappear.
  grid-template-columns: [sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem)[col-end]) [center-end] minmax(6rem, 1fr) [full-end]; //1140/8 = 140px



  //for development purposes
  & > * {
    padding: 40px;
    font-size: 3rem;
  }
}