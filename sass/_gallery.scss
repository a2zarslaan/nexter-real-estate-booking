.gallery {
  background-color: $color-grey-dark-1;
  grid-column: full-start / full-end;

  display: grid;
  grid-template-columns: repeat(8, 1fr);
  //to let the images maintain their aspect ratios even when the screen is resized to smaller screens, we will use viewport width unit here. There is no other specific reason for choosing 5% vw here, just because after experimentation it seemed to be the most suitable size for height. Now images will maintain their aspect ratio. We can also just set a fixed row height to achieve this effect
  grid-template-rows: repeat(7, 5vw);
  grid-gap: 1.5rem; //grid gap doesn'tadd space around the grid items, just between them, so we'll have to use padding to get space around grid-items
  padding: 1.5rem;

  &__item {
    &--1 {
      grid-row: 1 / span 2;
      grid-column: 1 / span 2;
    }
    &--2 {
      grid-row: 1 / span 3;
      grid-column: 3 / span 3;
    }
    &--3 {
      grid-row: 1 / span 2;
      grid-column: 6 / 7;
    }
    &--4 {
      grid-row: 1 / span 2;
      grid-column: 7 / -1;
    }
    &--5 {
      grid-row: 3 / span 3;
      grid-column: 1 / span 2;
    }
    &--6 {
      grid-row: 4 / span 2;
      grid-column: 3 / span 2;
    }
    &--7 {
      grid-row: 4 / 5;
      grid-column: 5 / 6;
    }
    &--8 {
      grid-row: 3 / span 2;
      grid-column: 6 / span 2;
    }
    &--9 {
      grid-row: 3 / span 3;
      grid-column: 8 / -1;
    }
    &--10 {
      grid-row: 6 / span 2;
      grid-column: 1 / 2;
    }
    &--11 {
      grid-row: 6 / span 2;
      grid-column: 2 / span 2;
    }
    &--12 {
      grid-row: 6 / span 2;
      grid-column: 4 / 5;
    }
    &--13 {
      grid-row: 5 / span 3;
      grid-column: 5 / span 3;
    }
    &--14 {
      grid-row: 6 / span 2;
      grid-column: 8 / -1;
    }
  }

 //to make images fit the grid cells
  &__img{
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block ;
  }
}